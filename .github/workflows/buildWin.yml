name: Building CI on Unity for Team 1 PFE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_NAME: PFE_CI # D√©finir le nom du projet comme variable d'environnement

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set Start Time
        run: echo "START_TIME=$(TZ=":Europe/Paris" date +'%Y-%m-%d_%H-%M')" >> $GITHUB_ENV

      - name: Set Random Image URL
        id: random-image
        run: |
          IMAGES=(
            "https://i.pinimg.com/originals/63/b7/77/63b7778a45cac5a7a6e040b9486e1947.gif"
            "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExMnJ3enN1YmN4c3R5OTZ0dGhtbWQ5Y3VhMXQ2MjU2aWZrNXd1OXU1YyZlcD12X2dpcGh5X2dpZl9zZWFyY2gmY3Q9Zw/3o6Zt4HU9uwXmXSAuI/giphy.gif"
            "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExaGRhbXh0aHUwdXB0dWZlaGZyeXh2ZGphMW5wYjN2Yzh6YzRkbGtiZyZlcD12X2dpcGh5X2dpZl9zZWFyY2gmY3Q9Zw/l3fQf0Xq8YGIYAOac/giphy.gif"
            "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExZXkwNXd5aGV3YmNxNHQ3MTJ5dTFubGRmMzN6ZjN1YXp3aGUyYWhlZyZlcD12X2dpcGh5X2dpZl9zZWFyY2gmY3Q9Zw/xT9DPIlGnuHpr2l2LA/giphy.gif"
          )
          RANDOM_IMAGE=${IMAGES[$((RANDOM % ${#IMAGES[@]}))]}
          echo "random_image_url=$RANDOM_IMAGE" >> $GITHUB_OUTPUT

      - name: Checking out Git
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get last successful build date
        id: last-build
        run: |
          echo "LAST_BUILD_DATE=$(git log --pretty=format:'%cd' -1 --date=iso)" >> $GITHUB_ENV

      - name: Get commits since last build
        id: commits
        run: |
          COMMITS=$(git log --pretty=format:'[%h](https://github.com/${{ github.repository }}/commit/%h) - %s - %an' --since="${{ env.LAST_BUILD_DATE }}")
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Set Build Name
        run: echo "BUILD_NAME=PFE1_WIN_${{ env.START_TIME }}" >> $GITHUB_ENV

      - name: Build execution time - start
        id: build-execution-time-start
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Caching
        uses: actions/cache@v3
        with:
          path: Library
          key: Library   

      - name: Building Game
        id: project-build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: ${{ env.BUILD_NAME }}
          buildsPath: Builds
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      - name: Build execution time - end
        id: build-execution-time
        run: |
          end_time=$(date +%s)
          duration=$((end_time - ${{ env.start_time }}))
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Storing Build Artefact
        id: build-upload
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.BUILD_NAME }}
          path: Builds/StandaloneWindows64
          retention-days: 14

      - name: List files in Builds directory (Debug)
        run: ls -R ${{ github.workspace }}/Builds

      - name: Get build artifact URL
        id: build-artifact-url
        run: |
          ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" \
            | jq -r '.artifacts[] | select(.name == "${{ env.BUILD_NAME }}") | .id')
          echo "BUILD_ARTIFACT_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/$ARTIFACT_ID" >> $GITHUB_ENV

      - name: Get logs artifact URL
        id: logs-artifact-url
        run: |
          ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" \
            | jq -r '.artifacts[] | select(.name == "${{ env.BUILD_NAME }}_Logs") | .id')
          echo "LOGS_ARTIFACT_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/$ARTIFACT_ID" >> $GITHUB_ENV

      - name: Set build status
        id: build-status
        run: |
          if [ "${{ steps.project-build.outputs.engineExitCode }}" -eq "0" ]; then
            echo "STATUS=R√©ussie ‚úÖ üôâ" >> $GITHUB_ENV
            echo "COLOR=65280" >> $GITHUB_ENV
          else
            echo "STATUS=√âchou√©e ‚ùå üôä" >> $GITHUB_ENV
            echo "COLOR=16711680" >> $GITHUB_ENV
          fi

      - name: Send Discord notification
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          username: "Abbuild üêíüçå"
          avatar-url: "https://media.discordapp.net/attachments/1314208057806426152/1346476105367814228/Abbu_3.png?ex=67c85317&is=67c70197&hm=c7c88ce931b72cf8e68da0792d2091a2e4b5f2e57e348f87d3ed36c5f1b792b5&=&format=webp&quality=lossless"
          embed-image-url: ${{ steps.random-image.outputs.random_image_url }}
          embed-title: "Build Unity ${{ env.STATUS }}"
          embed-description: |
            **D√©tails de la build:**
            - **Nom:** ${{ env.BUILD_NAME }}
            - **Plateforme:** StandaloneWindows64
            - **Dur√©e d'ex√©cution:** ${{ steps.build-execution-time.outputs.duration }} secondes
            - **Code de sortie:** ${{ steps.project-build.outputs.engineExitCode }}

            **Commits depuis la derni√®re build:**
            ${{ env.COMMITS }}

            **Liens Utiles:**
            - [T√©l√©charger la build](${{ env.BUILD_ARTIFACT_URL }})
            - [D√©tails du workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          embed-color: ${{ env.COLOR }}
          embed-footer-text: "Team 1 PFE - Build g√©n√©r√©e le ${{ env.START_TIME }}"
